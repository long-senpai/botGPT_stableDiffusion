Teiki x Helios Partnership  Teiki joins forces with Helios to co-grow Cardano. The first generation of the Teiki protocol is implemented in Helios. Teiki then commits to feature and help Helios raise recurrent funding for further development. Working together, we provide better tooling to fund and build ideas on Cardano.  Teiki Teiki is a crowdfunding protocol built on Cardanoâ€™s liquid staking for a novel subscription model, where backers stake ADA at smart contracts to generate rewards for project creators. We integrate AI to maximize UX, minimize the time one needs to raise funding and reduce human costs.  Helios Helios is a DSL for writing Cardano smart contracts. It is specifically designed to be a developer-friendly alternative to Haskell. Helios is functional, strongly typed, and has a simple curly braces syntax. It notably supports closures, functions with multiple return values, OOP-like methods, and enums as tagged unions. The Helios library is written in Javascript and lets us compile Helios scripts to Untyped Plutus Core and build Cardano transactions client-side.  Building Teiki with Helios Even when the whole team has experience with Haskell & PlutusTx, we chose Helios to implement the protocol, making us much more productive. We also believe in a future of low barriers to entry for Cardano builders, and Haskell & PlutusTx currently do not offer such a developer experience.  Among alternatives, Helios is one of the readiest, with concise language and documentation, rich standard libraries, and a great optimizer. While the language is still in its early days, its compiled UPLC is among the leanest based on our internal Facelift benchmarks.  Many people are concerned that Helios, TypeScript, and other alternatives sacrifice the security Haskell offers. However, we do not buy the idea. Verification against protocol specifications is most meaningful on the output UPLC submitted to the blockchain. Perfect compilation and code generation would not catch logic bugs anyway.  Ideally, we would have a specifications language and a UPLC verification framework. Builders would then be able to write contracts in the stack they are most comfortable and productive in.  Co-growth Until now, Teiki has been a proud production case study and a contributor to Helios. On the other hand, we would not have implemented the Teiki protocol that quickly without Helios and the technical support.  Both parties commit to delivering better future releases through this partnership. Teiki is also committed to featuring and helping Helios raise recurrent funding to fasten development.  Growing together, Teiki and Helios aim to provide better tooling to fund and build ideas on Cardano ðŸŒ».  Join Us!